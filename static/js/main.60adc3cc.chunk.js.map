{"version":3,"sources":["components/Helpers.js","components/Lobby.js","components/SendMessageForm.js","components/MessageContainer.js","components/ConnectedUsers.js","components/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["getCookie","name","dc","document","cookie","prefix","begin","indexOf","end","length","decodeURI","substring","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","Lobby","joinRoom","useState","jsonData","room","setRoom","url","listItems","setListItems","console","log","getData","a","axios","get","res","Array","from","data","d","className","sessionName","numberOfPlayers","maxNumberOfPlayers","onClick","roomName","id","put","Id","then","UserName","catch","e","useEffect","Form","onSubmit","preventDefault","Axios","post","adminId","error","Group","Control","placeholder","onChange","target","value","Button","variant","type","disabled","SendMessageForm","sendMessage","sendUserRoles","message","setMessage","InputGroup","FormControl","Append","MessageContainer","messages","messageRef","useRef","current","scrollHeight","clientHeight","scrollTo","left","top","behavior","ref","m","index","user","ConnectedUsers","users","u","idx","Chat","userRoles","sessionId","bot","closeConnection","informRoleDistribution","flagAd","setFlagAd","flagUs","setFlagUs","flagRoleHide","errorMes","seterrorMes","roleName","setRoleName","roleDescription","setRoleDescription","rolePhoto","setRolePhoto","endUserConnection","window","addEventListener","classes","classNames","roleId","userId","role1","img_class","width","height","src","App","connection","setConnection","setMessages","setUserRoles","setBot","setUsers","setSessionId","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","on","onclose","start","invoke","stop","location","href","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60adc3cc.chunk.js","sourcesContent":["export function getCookie(name) {\r\n    var dc = document.cookie;\r\n    var prefix = name + \"=\";\r\n    var begin = dc.indexOf(\"; \" + prefix);\r\n    if (begin === -1) {\r\n        begin = dc.indexOf(prefix);\r\n        if (begin !== 0) return null;\r\n    }\r\n    else {\r\n        begin += 2;\r\n        var end = document.cookie.indexOf(\";\", begin);\r\n        if (end === -1) {\r\n            end = dc.length;\r\n        }\r\n    }\r\n    // because unescape has been deprecated, replaced with decodeURI\r\n    //return unescape(dc.substring(begin + prefix.length, end));\r\n    return decodeURI(dc.substring(begin + prefix.length, end));\r\n}\r\nexport function parseJwt(token) {\r\n    var base64Url = token.split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n\r\n    return JSON.parse(jsonPayload);\r\n};","import React, { useEffect } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { getCookie, parseJwt } from './Helpers'\r\nimport Axios from 'axios'\r\nimport axios from 'axios'\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst Lobby = ({ joinRoom }) => {\r\n    const [jsonData] = useState(parseJwt(getCookie('token')))\r\n    const [room, setRoom] = useState();\r\n\r\n    const [url] = useState(\"https://bsite.net/Kanan02/api/Sessions\");\r\n    const [listItems, setListItems] = useState(null);\r\n\r\n    console.log(listItems);\r\n    function AddUserToRoom(roomName, id) {\r\n        axios.put(`https://bsite.net/Kanan02/api/Sessions/PlayerJoined/${id}?userId=${jsonData.Id}`,\r\n        )\r\n            .then(res => {\r\n                console.log(roomName);\r\n                console.log(jsonData.UserName);\r\n                joinRoom(jsonData.UserName, roomName, id);\r\n\r\n            }).catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(room + \"  \" + jsonData.Id);\r\n\r\n        Axios.post(url, {\r\n            sessionName: room,\r\n            adminId: jsonData.Id\r\n        })\r\n            .then(res => {\r\n\r\n                console.log(res);\r\n\r\n                joinRoom(jsonData.UserName, room, res.data);\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            ;\r\n    }\r\n\r\n    const getData = async () => {\r\n        const res = (await axios.get(\"https://bsite.net/Kanan02/api/Sessions/GetActiveSessions\"))\r\n        console.log(res);\r\n        setListItems(Array.from(res.data).map((d) => <li key={d.id} className='list-group-item mt-1'> {d.sessionName}  {d.numberOfPlayers}/{d.maxNumberOfPlayers} <button onClick={() => AddUserToRoom(d.sessionName, d.id)}>Join</button> </li>))\r\n    };\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <Form className='lobby'\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <Form.Group>\r\n                    <Form.Control placeholder=\"New room name\" onChange={e => setRoom(e.target.value)} />\r\n                </Form.Group>\r\n                <Button variant=\"success\" type=\"submit\" disabled={!room}>Create room</Button>\r\n\r\n\r\n            </Form>\r\n\r\n            <div className=\"row mt-2\">\r\n                <div className='col-3'></div>\r\n                <div className='col-6 mt-4'>\r\n                    <h3>Active Rooms</h3>\r\n                </div>\r\n                <div className='col-3'></div>\r\n            </div>\r\n            <div className='row mt-1 '>\r\n\r\n                <div className='col-3'></div>\r\n                <div className='col-6 '>\r\n                    <ul className=\"list-group overflow-hidden\" >{listItems}</ul>\r\n                </div>\r\n                <div className='col-3'></div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Lobby;","import { Form, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n\r\nconst SendMessageForm = ({ sendMessage,sendUserRoles }) => {\r\n    const [message, setMessage] = useState('');\r\n\r\n    return <Form\r\n        onSubmit={e => {\r\n            e.preventDefault();\r\n            sendMessage(message);\r\n            setMessage('');\r\n        }}>\r\n        <InputGroup>\r\n            <FormControl type=\"user\" placeholder=\"message...\"\r\n                onChange={e => setMessage(e.target.value)} value={message} />\r\n            <InputGroup.Append>\r\n                <Button variant=\"primary\" type=\"submit\" disabled={!message}>Send</Button>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n    </Form>\r\n}\r\n\r\nexport default SendMessageForm;","import { useEffect, useRef } from 'react';\r\n\r\nconst MessageContainer = ({ messages }) => {\r\n    const messageRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (messageRef && messageRef.current) {\r\n            const { scrollHeight, clientHeight } = messageRef.current;\r\n            messageRef.current.scrollTo({ left: 0, top: scrollHeight - clientHeight, behavior: 'smooth' });\r\n        }\r\n    }, [messages]);\r\n\r\n    return <div ref={messageRef} className='message-container' >\r\n        {messages.map((m, index) =>\r\n            <div key={index} className='user-message'>\r\n                <div className='message bg-primary'>{m.message}</div>\r\n                <div className='from-user'>{m.user}</div>\r\n            </div>\r\n        )}\r\n    </div>\r\n}\r\n\r\nexport default MessageContainer;","const ConnectedUsers = ({ users }) => <div className='user-list'>\r\n    <h4>Connected Users</h4>\r\n    {users.map((u, idx) => <h6 key={idx}>{u}</h6>)}\r\n</div>\r\n\r\nexport default ConnectedUsers;","import SendMessageForm from './SendMessageForm';\r\nimport MessageContainer from './MessageContainer';\r\nimport ConnectedUsers from './ConnectedUsers';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport { parseJwt, getCookie } from './Helpers';\r\nimport axios from 'axios'\r\nimport classNames from 'classnames'\r\nconst Chat = ({ sendMessage, messages, users, userRoles, bot, sessionId, closeConnection, informRoleDistribution }) => {\r\n\r\n    // if (sessionId==null) {\r\n    //     closeConnection();\r\n    // }\r\n    const [jsonData] = useState(parseJwt(getCookie('token')))\r\n    const [flagAd, setFlagAd] = useState(false);\r\n    const [flagUs, setFlagUs] = useState(true);\r\n    //const [flagRoleHide, setFlagRoleHide] = useState(true);\r\n    var flagRoleHide = true;\r\n    const [errorMes, seterrorMes] = useState(null);\r\n    const [roleName, setRoleName] = useState(null);\r\n\r\n    const [roleDescription, setRoleDescription] = useState(null);\r\n    const [rolePhoto, setRolePhoto] = useState(null);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('beforeunload', () => {\r\n            endUserConnection();\r\n        })\r\n    }\r\n        , []);\r\n    function endUserConnection() {\r\n\r\n        axios.put(`https://bsite.net/Kanan02/api/Sessions/PlayerLeft/${sessionId}`)\r\n            .then(res => {\r\n                closeConnection()\r\n                setRoleName(null);\r\n                setRoleDescription(null);\r\n                setRolePhoto(null);\r\n            }).catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    var classes = classNames({\r\n        'mx-2': true,\r\n        'admin-button': flagAd,\r\n        'user-button': flagUs\r\n    })\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    function showButton() {\r\n        axios.get(`https://bsite.net/Kanan02/api/Sessions/GetAdmin/${sessionId}`)\r\n            .then(res => {\r\n\r\n                if (res.data == jsonData.Id) {\r\n                    setFlagAd(true);\r\n                    setFlagUs(false);\r\n\r\n                }\r\n\r\n            }).catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    }\r\n    if (userRoles) {\r\n        var roleId = null;\r\n        for (let index = 0; index < userRoles.length; index++) {\r\n            if (userRoles[index].userId == jsonData.Id) {\r\n                roleId = userRoles[index].roleId;\r\n            }\r\n        }\r\n        if (roleId != null) {\r\n            if (roleId != 3) {\r\n                flagRoleHide = false;\r\n                axios.get(`https://bsite.net/Kanan02/api/Roles/${roleId}`)\r\n                    .then(res => {\r\n\r\n                        setRoleName(res.data.role1)\r\n                        setRoleDescription(res.data.roleDescription)\r\n                        setRolePhoto(res.data.rolePhoto)\r\n                        console.log(rolePhoto)\r\n                    }).catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    var img_class = classNames({\r\n        'invisible-img': flagRoleHide,\r\n    })\r\n    function startGame() {\r\n        axios.put(`https://bsite.net/Kanan02/api/GameSessionsUsersRoles/DistributeRoles?sessionId=${sessionId}`)\r\n            .then(res => {\r\n                seterrorMes(res.data);\r\n                informRoleDistribution();\r\n            }).catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    return (\r\n        <div className='mx-5 mb-3'>\r\n            <div className='row'>\r\n                <div className='col-9'>\r\n                    <div className='row'>\r\n                        <div className='col mx-3'>\r\n                            <h3>{errorMes}</h3>\r\n                        </div>\r\n                        <div className='col'>\r\n                            <div className='leave-room mx-5'>\r\n                                <Button variant='primary' className={classes} onClick={() => startGame()}>Start Game</Button>\r\n                                <Button variant='danger' onClick={() => endUserConnection()}>Leave Room</Button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <ConnectedUsers users={users} />\r\n                    <div className='chat mx-5'>\r\n                        <MessageContainer messages={messages} />\r\n                        <SendMessageForm sendMessage={sendMessage} />\r\n                    </div>\r\n                </div>\r\n                <div className='col-2 mx-1'>\r\n                    <h2>{roleName}</h2>\r\n                    <p className='roledisc'>{roleDescription}</p>\r\n                    <img className={img_class} width='150' height='200' src={`data:image/png;base64,${rolePhoto}`}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Chat;","import { useState } from 'react';\r\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport Lobby from './components/Lobby';\r\nimport Chat from './components/Chat';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap';\r\nconst App = () => {\r\n  const [connection, setConnection] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [userRoles, setUserRoles] = useState([]);\r\n  const [bot, setBot] = useState();\r\n  const [users, setUsers] = useState([]);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const joinRoom = async (user, room, id) => {\r\n    try {\r\n      const connection = new HubConnectionBuilder()\r\n        .withUrl(\"https://bsite.net/MafiaAZ/chat\")\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      connection.on(\"ReceiveMessage\", (user, message) => {\r\n        setMessages(messages => [...messages, { user, message }]);\r\n      });\r\n      connection.on(\"ReceiveUsersRoles\", (bot, userRoles) => {\r\n        setUserRoles(userRoles);\r\n        setBot(bot)\r\n      });\r\n      connection.on(\"UsersInRoom\", (users) => {\r\n        setUsers(users);\r\n      });\r\n      setSessionId(id);\r\n      connection.onclose(e => {\r\n        setConnection();\r\n        setMessages([]);\r\n        setUsers([]);\r\n      });\r\n      await connection.start();\r\n      await connection.invoke(\"JoinRoom\", { user, room });\r\n      setConnection(connection);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  ////////////////////////////////////////////\r\n\r\n  // const ReceiveUsersRoles = async (bot,userRoles)=>{\r\n  //   try{\r\n  //     setUserRoles( userRoles );\r\n  //     setBot(bot);\r\n  //   }catch (e) {\r\n  //     console.log(e);\r\n  //   }\r\n  // }\r\n\r\n  const informRoleDistribution = async () => {\r\n    try {\r\n      console.log(sessionId);\r\n      await connection.invoke(\"InformRoleDistribution\", sessionId);\r\n\r\n\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  ////////////////////////////////////////////\r\n\r\n  const sendMessage = async (message) => {\r\n    try {\r\n      await connection.invoke(\"SendMessage\", message);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  const closeConnection = async () => {\r\n    try {\r\n      setUserRoles([]);\r\n      await connection.stop();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  function redirectToMain() {\r\n    closeConnection();\r\n    window.location.href = \"https://kenan812.github.io/\";\r\n  }\r\n  return <div className='app container-fluid'>\r\n    <div className='row w-100'>\r\n\r\n      <div className='col-12'>\r\n        <a onClick={redirectToMain}>\r\n          <img\r\n            alt=\"image\"\r\n            src=\"/playground_assets/1-removebg-preview-200h.png\"\r\n            className=\"profile-image\"\r\n          />\r\n        </a>\r\n      </div>\r\n\r\n      {/* <div className='col-8'>\r\n        <h2>MafiaChat</h2>\r\n        <hr className='line' />\r\n      </div> */}\r\n      <div className='col-2'>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    {!connection\r\n      ? <Lobby joinRoom={joinRoom} />\r\n      // : <Chat sendMessage={sendMessage} messages={messages} users={users} sessionId={sessionId} closeConnection={closeConnection} />}\r\n      : <Chat sendMessage={sendMessage} messages={messages} users={users} userRoles={userRoles} bot={bot}\r\n        sessionId={sessionId} closeConnection={closeConnection} informRoleDistribution={informRoleDistribution} />}\r\n  </div>\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}